<?xml version="1.0" encoding="UTF-8"?>

<project
    basedir="."
    default="release"
    xmlns:resolver="antlib:org.apache.maven.resolver.ant"
    xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:if="ant:if"
    name="VAquaClient">

    <tstamp>
        <format property="NOW" timezone="GMT" pattern="yyyy-MM-dd'T'HH:mm:ss'Z'"/>
    </tstamp>

    <property environment="env"/>
    <echo message="${env.PATH}"/>
    <exec executable="/usr/libexec/java_home">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="11"/>
    </exec>

    <!-- A Java 9 or later compiler is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="11"/>
    </exec>

    <property name="javac" location="${jdk}/bin/javac"/>

    <!-- A Java 8 boot class path is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk8">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="1.8"/>
    </exec>

    <property name="bootclasspath" location="${jdk8}/jre/lib/rt.jar" />

    <property name="RELEASE" value="0.9"/>
    <property name="fullReleaseName" value="${RELEASE} ${NOW}"/>

    <property name="base" location=".."/>
    <property name="src" location="${base}/src"/>
    <property name="resources" location="${base}/resources"/>
    <property name="builddir" location="out"/>
    <property name="classesdir" location="${builddir}/classes"/>
    <property name="distdir" location="dist"/>

    <property name="debug" value="false"/>

    <target name="init">
        <echo level="info" message="${fullReleaseName}"/>
    </target>

    <target name="clean" description="Remove build directories">
        <delete includeEmptyDirs="true" failonerror="false"><fileset dir="${builddir}"/></delete>
    </target>

    <target name="saveIDs">
      <echo file="${classesdir}/org/violetlib/vaquaclient/RELEASE.txt" message="${RELEASE}"/>
      <echo file="${classesdir}/org/violetlib/vaquaclient/BUILD.txt" message="${NOW}"/>
    </target>

    <condition property="resourcesPresent">
        <resourceexists>
            <file file="${resources}"/>
        </resourceexists>
    </condition>

    <target name="copyResources" if="${resourcesPresent}">
        <copy todir="${classesdir}">
            <fileset dir="${resources}">
                <include name="org/violetlib/**"/>
            </fileset>
        </copy>
    </target>

    <!--
      To use the Maven resolver, the Maven resolver ant tasks uber JAR must be installed in .ant/lib.
      See https://maven.apache.org/resolver-ant-tasks/
    -->

    <target name="resolve-maven">
        <resolver:resolve>
          <dependencies>
            <dependency coords="org.jetbrains:annotations:20.1.0"/>
          </dependencies>
          <path refid="cp" classpath="compile"/>
        </resolver:resolve>
    </target>

    <!--
      To use the Ivy resolver, the Ivy uber JAR must be downloaded and installed in .ant/lib.
      See https://ant.apache.org/ivy/
    -->

    <target name="resolve-ivy">
        <ivy:cachepath pathid="cp">
            <dependency org="org.jetbrains" name="annotations" rev="20.1.0"/>
        </ivy:cachepath>
    </target>

    <target name="resolve" depends="resolve-maven"/>

    <target name="compile8" depends="copyResources, resolve">
      <mkdir dir="${classesdir}"/>

      <javac source="1.8" target="1.8"
          bootclasspath="${bootclasspath}"
          classpathref="cp"
          encoding="UTF-8"
          srcdir="${src}"
          destdir="${classesdir}"
          debug="${debug}"
          optimize="true"
          includeantruntime="false"
          fork="true"
          executable="${javac}"
          >
          <patternset>
            <include name="org/violetlib/vaquaclient/**/*.java"/>
          </patternset>
      </javac>
    </target>

    <target name="compile-Java" depends="compile8">
    </target>

    <target name="VAquaClient" depends="compile-Java,saveIDs">

        <echo level="info" message="Building VAquaClient ${fullReleaseName}"/>

        <mkdir dir="${distdir}"/>

        <jar jarfile="${distdir}/VAquaClient.jar" basedir="${classesdir}">
        </jar>
    </target>

    <target name="release" depends="clean,VAquaClient"/>

</project>
